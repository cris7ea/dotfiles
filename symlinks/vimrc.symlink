set nocompatible
filetype off
filetype plugin on
filetype plugin indent on
syntax on
set number

set background=dark 
colorscheme onedark

" disable swap files and backups
set backupdir=~/vimfiles/tmp,.
set directory=~/vimfiles/tmp,.
set nobackup
set noswapfile

" use system clipboard
set clipboard=unnamed

set history=100            " Store more history (default is 20)
set undolevels=400         " All the undo
set spell                  " Spell checking on
set showmatch              " Show matching brackets/parenthesis
set matchtime=0            " Don't blink the matches (looks laggy)
set incsearch              " Find as you type search
set hlsearch               " Highlight search terms
set ignorecase             " Case insensitive search
set smartcase              " Case sensitive if we type an uppercase

" Plugins
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'kien/ctrlp'
Plugin 'tpope/vim-fugitive'
Plugin 'gregsexton/gitv'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
Plugin 'chemzqm/vim-jsx-improve'
Plugin 'sheerun/vim-polyglot'
Plugin 'vim-syntastic/syntastic'
Plugin 'Valloric/MatchTagAlways'
Plugin 'Shougo/neocomplete.vim'
Plugin 'alvan/vim-closetag'

" Global vars
let g:neocomplete#enable_at_startup = 1
let g:nerdtree_tabs_open_on_console_startup=1
let g:jsx_ext_required = 0 " Allow JSX in normal JS files
let g:syntastic_javascript_checkers = ['eslint']
let g:mta_filetypes = { 'javascript.jsx': 1, 'html' : 1, 'xhtml' : 1, 'xml' : 1, 'jinja' : 1, }
let g:neocomplete#enable_at_startup = 1
let g:closetag_filenames = "*.html,*.jsx"
let g:javascript_plugin_jsdoc = 1
let g:javascript_plugin_flow = 1
set encoding=utf-8

call vundle#end()            " required
filetype plugin indent on    " required

" Config for NERDTree
map <C-n> :NERDTreeToggle<CR>
map <Leader>n <plug>NERDTreeMirrorToggle<CR>
